'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const checkLines_1 = require("./checkLines");
const parsers_1 = require("./parsers");
function parseMRZ(inputLines, options = {}) {
    const lines = (0, checkLines_1.checkLines)(inputLines);
    switch (lines.length) {
        case 2:
        case 3: {
            switch (lines[0].length) {
                case 30:
                    return parsers_1.parsers.td1(lines, options);
                case 36: {
                    const endLine1 = lines[0].substring(30, 66);
                    if (endLine1.match(/[0-9]/)) {
                        return parsers_1.parsers.frenchNationalId(lines, options);
                    }
                    else {
                        return parsers_1.parsers.td2(lines, options);
                    }
                }
                case 44:
                    return parsers_1.parsers.td3(lines, options);
                case 9:
                    return parsers_1.parsers.swissDrivingLicense(lines, options);
                default:
                    throw new Error(`unrecognized document format. First line of input must have 30 (TD1), 36 (TD2 or French National Id), 44 (TD3) or 9 (Swiss Driving License) characters and it has a length of ${lines[0].length}`);
            }
        }
        default:
            throw new Error(`unrecognized document format. Input must have two or three lines, found ${lines.length}`);
    }
}
exports.default = parseMRZ;
//# sourceMappingURL=parse.js.map